---
title: "Getting Started with HW 3"
subtitle: "DSAN 5300: Statistical Learning"
sidebar: mainnav
weeknum: 9
assignment: "HW 3"
date: last-modified
date-format: full
categories:
  - "Extra Writeups"
cache: true
format:
  html:
    echo: true
    code-fold: true
    html-math-method: mathjax
    df-print: kable
    toc: true
    link-external-newwindow: true
    link-external-icon: true
---

::: {.callout-note title="Update Log" collapse="false" icon="false"}

* Original version posted **18 Mar 2025, 7:00pm**

:::

The following clarifications on different pieces of HW3 helped me when going through it with students in office hours.

## HW-3.2: Advertising Budgets

In the first code cell within this question, we do provide starter code, but you will still need to carry out the last part of the instructions, "Split the data into a training and test set (70% / 30%)". The starter code does much of the work for you, since you should be able to use the created `train` object to construct a tibble like `train_df`, which can then be used with `gam()` in the next part.

## HW-3.2a

Here, as a more specific clarification, the way that I know how to specify a regression spline in R, in general, is with a line that looks like the following:

``` {.r}
library(gam)
gam_model <- gam(
    dependent ~ s(indep1, k = degree1) + s(indep2, k = degree2) + s(indep3, k = degree3),
    data=train_df
)
```

There *are* other ways to achieve this kind of degree-`k` spline, but, this is the most direct way I know of to specify the degree.

However, **to get this to work, in terms of making sure that the `s()` function allows the degree argument `k`, you'll need to load the [`mgcv` library](https://www.maths.ed.ac.uk/~swood34/mgcv/) in addition to [`gam`](https://cran.r-project.org/web/packages/gam/gam.pdf)** (which is already loaded for you in a cell near the top of the distributed homework files). In other words, if you just copy-and-paste the previous code, you'll get an error (at least in my version of R) that looks like

```
Error in s(indep1, k = degree1) : unused argument (k = degree1)
```

So, here, the `mgcv` library essentially adds in this new `k` argument that can be passed to `s()` (which is from `gam` itself) to specify the degree parameter.
